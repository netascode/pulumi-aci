// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("aci");

/**
 * Allow insecure HTTPS client. This can also be set as the ACI_INSECURE environment variable. Defaults to true.
 */
export declare const insecure: boolean | undefined;
Object.defineProperty(exports, "insecure", {
    get() {
        return __config.getObject<boolean>("insecure");
    },
    enumerable: true,
});

/**
 * Enable debug logging. This can also be set as the ACI_LOGGING environment variable. Defaults to false.
 */
export declare const logging: boolean | undefined;
Object.defineProperty(exports, "logging", {
    get() {
        return __config.getObject<boolean>("logging");
    },
    enumerable: true,
});

/**
 * Password for the APIC Account. This can also be set as the ACI_PASSWORD environment variable.
 */
export declare const password: string;
Object.defineProperty(exports, "password", {
    get() {
        return __config.get("password") ?? (utilities.getEnv("ACI_PASSWORD") || "");
    },
    enumerable: true,
});

/**
 * Number of retries for REST API calls. This can also be set as the ACI_RETRIES environment variable. Defaults to 3.
 */
export declare const retries: number | undefined;
Object.defineProperty(exports, "retries", {
    get() {
        return __config.getObject<number>("retries");
    },
    enumerable: true,
});

/**
 * URL of the Cisco APIC web interface. This can also be set as the ACI_URL environment variable.
 */
export declare const url: string;
Object.defineProperty(exports, "url", {
    get() {
        return __config.get("url") ?? (utilities.getEnv("ACI_URL") || "");
    },
    enumerable: true,
});

/**
 * Username for the APIC Account. This can also be set as the ACI_USERNAME environment variable.
 */
export declare const username: string;
Object.defineProperty(exports, "username", {
    get() {
        return __config.get("username") ?? (utilities.getEnv("ACI_USERNAME") || "");
    },
    enumerable: true,
});

export declare const version: string | undefined;
Object.defineProperty(exports, "version", {
    get() {
        return __config.get("version");
    },
    enumerable: true,
});

